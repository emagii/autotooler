#!/bin/sh

# Ease up on git use.

add_credentials ()
{
	git config credential.helper 'cache --timeout=36000'
}

get_repo ()
{
	git clone	https://www.github.com/emagii/autotooler.git	"$1"
}

add_config_string ()
{
	printf	"CONFIG_%s=\"%s\"\n"	"$1" "$2"	>>	${CONFIG}
}

add_config_yes ()
{
	printf	"CONFIG_%s=y\n"	"$1"			>>	${CONFIG}
}

raw ()
{
	echo	"$1"	>>	${CONFIG}
}

purge ()
{
	rm	-f *~
}

get_repo ()
{
	REPO=""
	for f in $(ls -1) ; do
		if [ "$f" == "mklib" ] ; then
			continue;
		fi
		if [ "$f" == "autotooler" ] ; then
			continue;
		fi
		if [ "$f" == "README" ] ; then
			continue;
		fi
		if [ -d "$f/.git" ] ; then
			REPO="$f"
			break;
		else
			continue;
		fi
	done
	if [ "x$REPO" == "x" ] ; then
		echo	"Did not find a git repo, exiting"
		exit	1
	fi
}

init_repo_autotooler ()
{
	if	[ -d $REPO/autotooler ] ; then
		echo	"$REPO contains autotooler subdir"
		DEFCONFIG=$(cd $REPO/autotooler ; find . -name '*_defconfig')
	else
		echo	"Adding autotooler subdir to $REPO and syncing"
		mkdir	-p	$REPO/autotooler
		rsync	-av	"autotooler/user/"	"$REPO/autotooler"
		find "$REPO/autotooler" -name '*_defconfig' | xargs /bin/rm
		DEFCONFIG=""
	fi
}

init_repo ()
{
	pushd	$REPO		&>/dev/null
	git config credential.helper 'cache --timeout=36000'

	mkdir	-p		m4
	mkdir	-p		src/include
	touch			src/include/config.h.in
	touch			$REPO.pc.in
	if	! [ -f AUTHORS ] ; then
		printf	"AUTHOR: %s <%s>\n"	"${AUTHOR}" "<${EMAIL}>"	>	AUTHORS
	fi
	touch			ChangeLog
	touch			COPYING
	touch			INSTALL
	touch			LICENSE
	touch			NEWS
	touch			README
	touch			.gitignore
	if ! [ -f autogen.sh ] ; then
		install	-m 755 ../autotooler/scripts/autogen.sh	autogen.sh
	fi

	echo	"#!/bin/sh"					>	yocto
	echo	"PREFIX=/usr/local/$REPO"			>>	yocto
	echo	"sudo	mkdir			\${PREFIX}"	>>	yocto
	echo	"sudo	chown	$USER:$USER	\${PREFIX}"	>>	yocto
	echo	"./configure		--prefix=\${PREFIX}"	>>	yocto
	chmod	a+x							yocto

	popd				&>/dev/null
}

init_links ()
{
	pushd	autotooler		&>/dev/null
	ln	-sf 	../$REPO	REPO
	popd				&>/dev/null
	pushd	autotooler/src		&>/dev/null
	ln	-sf	"../../$REPO/autotooler"		"user"
	ln	-sf	"../../$REPO"				"REPO"
	popd				&>/dev/null
}

init_config ()
{
	pushd	autotooler		&>/dev/null
	CONFIG=.config
	raw						"HAVE_DOT_CONFIG=y"
	add_config_string	PROJECT			"$REPO"
	add_config_string	SRC_URI_HOST		"${SRC_URI}"
	add_config_string	SRC_URI_REPO		""
	add_config_string	WORKDIR			"${WORKDIR}"
	add_config_string	PROJECT_TYPE		"library"
	add_config_yes		SHARED_LIB	
	add_config_yes		LIBRARY

	add_config_string	LIBRARY_NAME		"$REPO"
	add_config_string	LIBRARY_VERSION		"1.0"
	add_config_string	COPYRIGHT_DATE		"2017"
	add_config_string	AUTHOR			"${AUTHOR}"
	add_config_string	AUTHOR_EMAIL		"${EMAIL}"
	add_config_string	HOMEPAGE		"${HOMEPAGE}"
	add_config_string	AC_PRERQ		"2.59"
	add_config_string	AC_CONFIG_HEADER	"src/include/config.h"
	add_config_string	AC_CONFIG_MACRO_DIR	"m4"
	add_config_string	AM_INIT_AUTOMAKE	"1.10 -Wall no-define"
	add_config_string	SRCDIR			"src"

	add_config_yes		OS_LINUX
	popd				&>/dev/null
}

purge
source	./config.inc
add_credentials
get_repo	"$1"

echo	"Autotooling $REPO"
init_repo_autotooler
init_repo
init_links
if [ "x$DEFCONFIG" == "x" ] ; then
	init_config
fi


